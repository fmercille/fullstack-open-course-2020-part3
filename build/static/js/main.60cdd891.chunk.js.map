{"version":3,"sources":["components/Directory.js","components/Filter.js","components/NewEntryForm.js","components/Notification.js","services/entries.js","App.js","index.js"],"names":["Directory","content","deleteHandler","map","person","key","name","number","onClick","id","Filter","value","handler","onChange","NewEntryForm","props","onSubmit","addPersonHandler","newNameValue","newNameChangeHandler","newNumberValue","newNumberChangeHandler","type","Notification","message","messageType","className","baseURL","axios","get","newObject","post","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterValue","setFilterValue","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","entriesService","then","response","data","displayNotification","setTimeout","displayError","filteredPersons","filter","trim","length","toLowerCase","indexOf","event","target","preventDefault","alert","findIndex","e","window","confirm","changedPerson","find","returnedEntry","catch","error","newPersonObject","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60cdd891.chunk.js","sourcesContent":["import React from 'react'\n\nconst Directory = ({ content, deleteHandler }) => (\n  <div>\n    {content.map(person =>\n      <div key={person.name}>{person.name} {person.number}&nbsp;<button onClick={() => deleteHandler(person.id)}>Delete</button></div>\n    )}\n  </div>\n)\n\nexport default Directory","import React from 'react'\n\nconst Filter = ({ value, handler }) => (\n    <div>\n        Filter names: <input value={value} onChange={handler} />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst NewEntryForm = (props) => (\n  <div>\n    <form onSubmit={props.addPersonHandler}>\n      <div>name: <input value={props.newNameValue} onChange={props.newNameChangeHandler} /></div>\n      <div>number: <input value={props.newNumberValue} onChange={props.newNumberChangeHandler} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </div>\n)\n\nexport default NewEntryForm","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null\n  } else {\n    return (\n      <div className={messageType}>\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseURL)\n}\n\nconst create = newObject => {\n  return axios.post(baseURL, newObject)\n}\n\nconst deleteEntry = id => {\n  return axios.delete(`${baseURL}/${id}`, id)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseURL}/${id}`, newObject)\n}\n\nexport default {\n  getAll,\n  create,\n  delete: deleteEntry,\n  update\n}","import React, { useState, useEffect } from 'react'\n\nimport Directory from './components/Directory'\nimport Filter from './components/Filter'\nimport NewEntryForm from './components/NewEntryForm'\nimport Notification from './components/Notification'\n\nimport entriesService from './services/entries'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    entriesService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const displayNotification = (message) => {\n    setNotificationMessage(message)\n\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n  }\n\n  const displayError = (message) => {\n    setErrorMessage(message)\n\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    // Validate phone number first\n    if (newNumber.length < 3) {\n      alert(\"You need to input a valid phone number\")\n      return;\n    }\n\n    if (persons.findIndex(e => e.name === newName) > -1) {\n      if (window.confirm(`${newName} is already in the phonebook. Replace the old number with the new one?`)) {\n        const changedPerson = { ...persons.find(e => e.name === newName), number: newNumber }\n        entriesService.update(changedPerson.id, changedPerson)\n          .then(returnedEntry => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedEntry.data))\n            setNewName('')\n            setNewNumber('')\n            displayNotification(`Updated number for ${newName}`)\n          })\n          .catch(error => { // The person was deleted\n            displayError(`Error while updating the entry for ${newName}`)\n\n            // Fetch the data from the server to synchronize the view\n            entriesService\n              .getAll()\n              .then(response => {\n                setPersons(response.data)\n              })\n          })\n      }\n\n      return\n    }\n\n    const newPersonObject = { name: newName, number: newNumber }\n\n    entriesService.create(newPersonObject)\n      .then(response => {\n        setPersons(persons.concat(newPersonObject))\n        setNewName('')\n        setNewNumber('')\n        displayNotification(`Added ${newName}`)\n      })\n  }\n\n  const deletePerson = (id) => {\n    const name = persons.find(person => person.id === id).name\n\n    if (window.confirm(`Delete ${name}?`)) {\n      entriesService.delete(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          displayNotification(`Deleted ${name}`)\n        })\n        .catch(error => { // The person was deleted\n          displayError(`Error while deleting the entry for ${name}`)\n\n          // Fetch the data from the server to synchronize the view\n          entriesService\n            .getAll()\n            .then(response => {\n              setPersons(response.data)\n            })\n        })\n    }\n  }\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterValueChange = (event) => {\n    setFilterValue(event.target.value)\n  }\n\n  const filteredPersons = persons.filter(person => filterValue.trim().length ? person.name.toLowerCase().indexOf(filterValue.toLowerCase()) >= 0 : true)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} messageType='notice' />\n      <Notification message={errorMessage} messageType='error' />\n      <Filter value={filterValue} handler={handleFilterValueChange} />\n      <h2>Add a new entry</h2>\n      <NewEntryForm addPersonHandler={addPerson} newNameValue={newName} newNameChangeHandler={handleNewNameChange} newNumberValue={newNumber} newNumberChangeHandler={handleNewNumberChange} />\n      <h2>Numbers</h2>\n      <Directory content={filteredPersons} deleteHandler={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}